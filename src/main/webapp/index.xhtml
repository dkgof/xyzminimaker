<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">

    <h:head>
        <title>XYZ MiniMaker</title>
        <link href="css/primeflex.css" rel="stylesheet" type="text/css"/>
        <link href="css/main.css" rel="stylesheet" type="text/css"/>

        <script src="js/three.min.js" type="text/javascript"></script>
        <script src="js/OrbitControls.js" type="text/javascript"></script>
        <script src="js/GCodeLoader.js" type="text/javascript"></script>

        <meta name="viewport" content="minimal-ui, width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />

        <script>
            //<![CDATA[
            let camera;
            let container;
            let controls;
            let scene;
            let loader;
            let renderer;
            let object;
            jQuery(function () {
                container = document.getElementById('gcode');
                camera = new THREE.PerspectiveCamera(60, container.offsetWidth / container.offsetHeight, 0.1, 1000);
                camera.position.set(0, 0, 10);
                controls = new THREE.OrbitControls(camera, container);
                controls.enableKeys = false;
                scene = new THREE.Scene();
                loader = new THREE.GCodeLoader();
                loader.splitLayer = true;
                renderer = new THREE.WebGLRenderer();
                renderer.setPixelRatio(window.devicePixelRatio);
                renderer.setSize(container.offsetWidth, container.offsetHeight);
                container.appendChild(renderer.domElement);
                //window.addEventListener('resize', resize, false);

                jQuery("#singleLayer").on("change", function () {
                    let value = $("#slider-range").slider("value");
                    updateVisibleLayers(value);
                });

                animate();
            });
            function resize() {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            }

            function animate() {
                renderer.render(scene, camera);
                requestAnimationFrame(animate);
            }

            function loadGcode(gcode) {
                if (object != null) {
                    scene.remove(object);
                }

                object = loader.parse(gcode);
                object.position.set(0, 0, 0);
                scene.add(object);
                camera.position.setLength(100);
            }

            function updateVisibleLayers(value) {
                let singleLayer = jQuery("#singleLayer")[0].checked;
                object.children.forEach(function (child) {
                    let layer = parseInt(child.name.substring(5));
                    if (layer <= value && !singleLayer) {
                        child.visible = true;
                    } else {
                        child.visible = false;
                    }
                    if (singleLayer && layer === value) {
                        child.visible = true;
                    }
                });
            }

            function updateGcodeViewer() {
                loadGcode(gcode.replace(/;N;/g, "\n"));
                $("#slider-range").slider({
                    orientation: "vertical",
                    range: false,
                    min: 0,
                    max: object.children.length - 1,
                    value: object.children.length - 1,
                    slide: function (event, ui) {
                        let value = ui.value;
                        updateVisibleLayers(value);
                    }
                }
                );
            }
            //]]>
        </script>
    </h:head>
    <h:body>
        <h1>XYZ MiniMaker</h1>

        <ui:param name="info" value="#{xyzBean.info}" />
        <h:form id="infoForm">
            <div>
                <p:panel id="xyzInfo" header="#{info.printerName} [v#{info.firmwareVersion}]">
                    <p:panelGrid>
                        <p:row>
                            <p:column>
                                Filament: <h:outputText value="#{info.filamentName}" />
                            </p:column>
                            <p:column style="text-align: right;">
                                <h:outputText value='#{xyzBean.info.filamentName}' /> - <h:outputText value="#{info.spoolLeftMFormatted}" /> / <h:outputText value="#{info.filamentTotalLength}" />m
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column>
                                Status: 
                            </p:column>
                            <p:column style="text-align: right;">
                                <h:outputText value="#{info.printStatus} [Sub: #{info.printSubStatus}]" />
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column>
                                Extruder: 
                            </p:column>
                            <p:column style="text-align: right;">
                                <h:outputText value="#{info.extruderTemp}&deg;C" /> / <h:outputText value="#{info.extruderTargetTemp}&deg;C" />
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column colspan="2">
                                Print progress: <p:progressBar value="#{info.percentComplete}" labelTemplate="{value}%" />
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column>
                                Elapsed time:
                            </p:column>
                            <p:column style="text-align: right;">
                                <h:outputText value="#{info.elapsedTimeMinutes}" /> min
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column>
                                Time left:
                            </p:column>
                            <p:column style="text-align: right;">
                                <h:outputText value="#{info.estimatedTimeLeftMinutes}" /> min
                            </p:column>
                        </p:row>
                    </p:panelGrid>
                </p:panel>
            </div>

            <p:poll interval="5" update="infoForm:xyzInfo controls:printForm controls:jogForm controls:filamentForm controls:calibrateForm" />
        </h:form>

        <p:tabView id="controls" activeIndex="#{xyzBean.currentTab}">
            <p:ajax event="tabChange" listener="#{xyzBean.onTabChange}" />
            <p:tab title="Printing">
                <p:outputPanel rendered="#{xyzBean.showPrintControls}">
                    <h:form id="printForm">
                        <div>
                            <p:panel id="buttons" header='Controls' style='display: inline-block'>
                                <p:fileUpload accept=".gcode" allowTypes="/(\.|\/)(gcode)$/" mode="advanced" auto="true" label="Upload" fileUploadListener="#{xyzBean.handleUpload}" update="controls:printForm controls:viewer"/>
                                <p:commandButton id="print" value="Print" actionListener="#{xyzBean.print()}" disabled="#{!xyzBean.idle or xyzBean.printing or xyzBean.currentGcode == null}"/>
                                <p:commandButton id="cancel" value="Cancel" actionListener="#{xyzBean.cancel()}" disabled="#{!xyzBean.printing}"/>
                                <p:commandButton id="pause" value="Pause" actionListener="#{xyzBean.pause()}" disabled="#{!xyzBean.pausable}"/>
                                <p:commandButton id="resume" value="Resume" actionListener="#{xyzBean.resume()}" disabled="#{!xyzBean.paused}"/>
                            </p:panel>
                        </div>
                    </h:form>
                    <div>
                        <p:panel id="viewer" style='display: inline-block'>
                            <f:facet name="header">
                                GCode Viewer <div style="display: inline-block;">Single layer: <input type="checkbox" id="singleLayer" /></div>
                            </f:facet>
                            <p:outputPanel id="printStats">
                                <p:outputPanel rendered="#{xyzBean.currentGcode != null}">
                                    Print time: <h:outputText value="#{xyzBean.printTimeFormatted}" />
                                    <br />
                                    Filament used: <h:outputText value="#{xyzBean.filamentUseFormatted}"/> m
                                    <br />
                                    Price: <h:outputText value="#{xyzBean.filamentPriceFormatted}"/>,-
                                    <script>
                                        console.log("Reloaded!");
                                        var gcode = '#{xyzBean.gcodeFormatted}';
                                        jQuery(function () {
                                            updateGcodeViewer();
                                        });
                                    </script>
                                </p:outputPanel>
                            </p:outputPanel>
                            <div class="ui-g">
                                <div class="ui-g-9" id="gcode" style="width: 800px; height: 600px; padding: 0px;"></div>
                                <div id="slider-range" style="height:600px;"></div>
                            </div>
                        </p:panel>
                    </div>
                </p:outputPanel>
                <p:outputPanel rendered="#{not xyzBean.showPrintControls}">
                    Current printer state does not support print control
                </p:outputPanel>
            </p:tab>
            <p:tab title="Jog">
                <p:outputPanel rendered="#{xyzBean.showJogControls}">
                    <h:form id="jogForm">
                        <p:panel id="buttons" header='Controls' style='display: inline-block'>
                            <div class="p-grid">
                                <div class="p-col-12">
                                    <p:commandButton title="Home" disabled="#{xyzBean.jogMode}" action="#{xyzBean.doHome()}"/>
                                </div>
                                <div class="p-col-12">
                                    <p:commandButton title="X +" disabled="#{not xyzBean.jogMode}" action="#{xyzBean.doJog('x', false)}"/>
                                    <p:commandButton title="X -" disabled="#{not xyzBean.jogMode}" action="#{xyzBean.doJog('x', true)}"/>
                                </div>
                                <div class="p-col-12">
                                    <p:commandButton title="Y +" disabled="#{not xyzBean.jogMode}" action="#{xyzBean.doJog('y', false)}"/>
                                    <p:commandButton title="Y -" disabled="#{not xyzBean.jogMode}" action="#{xyzBean.doJog('y', true)}"/>
                                </div>
                                <div class="p-col-12">
                                    <p:commandButton title="Z +" disabled="#{not xyzBean.jogMode}" action="#{xyzBean.doJog('z', false)}"/>
                                    <p:commandButton title="Z -" disabled="#{not xyzBean.jogMode}" action="#{xyzBean.doJog('z', true)}"/>
                                </div>
                                <div class="p-col-12">
                                    <p:spinner value="#{xyzBean.jogAmount}" stepFactor="0.1" min="0.1" max="10" />
                                </div>
                            </div>
                        </p:panel>
                    </h:form>
                </p:outputPanel>
                <p:outputPanel rendered="#{not xyzBean.showJogControls}">
                    Current printer state does not support jog control
                </p:outputPanel>
            </p:tab>
            <p:tab title="Filament">
                <p:outputPanel rendered="#{xyzBean.showFilamentControls}">
                    <h:form id="filamentForm">
                        <p:outputPanel rendered="#{xyzBean.filamentLoadPossible}">
                            Filament load:
                            <div>
                                <p:commandButton title="Start" disabled="#{not xyzBean.idle}" action="#{xyzBean.startFilamentLoad()}" />
                                <p:commandButton title="Stop" disabled="#{not xyzBean.filamentLoading}" action="#{xyzBean.stopFilamentLoad()}" />
                            </div>
                        </p:outputPanel>
                        <p:outputPanel rendered="#{xyzBean.filamentUnloadPossible}">
                            Filament unload:
                            <div>
                                <p:commandButton title="Start" disabled="#{not xyzBean.idle}" action="#{xyzBean.startFilamentUnload()}" />
                                <p:commandButton title="Stop" disabled="#{not xyzBean.filamentUnloading}" action="#{xyzBean.stopFilamentUnload()}" />
                            </div>
                        </p:outputPanel>
                    </h:form>
                </p:outputPanel>
                <p:outputPanel rendered="#{not xyzBean.showFilamentControls}">
                    Current printer state does not support filament control
                </p:outputPanel>
            </p:tab>
            <p:tab title="Calibrate">
                <p:outputPanel rendered="#{xyzBean.showCalibrateControls}">
                    <h:form id="calibrateForm">
                    </h:form>
                </p:outputPanel>
                <p:outputPanel rendered="#{not xyzBean.showCalibrateControls}">
                    Current printer state does not support calibrate control
                </p:outputPanel>
            </p:tab>
        </p:tabView>
    </h:body>
</html>